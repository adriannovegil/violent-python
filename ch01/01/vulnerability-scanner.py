import socket
import sys
import os

# Funcion que se encarga de llevar a cabo la conexion con el servidor.
def retBanner(ip, port):
	try:
		socket.setdefaulttimeout(2)
		s = socket.socket()
		s.connect((ip, port))
		banner = s.recv(1024)
		return banner
	except Exception, e:
		#print "[-] Imposible establecer la conexion con la ip: " + ip + " en el puerto: " + str(port) + ". Error = " + str(e)
		return

# Funcion que se encarga de verificar si existe alguna vulnerabilidad 
# en el servidor.
def checkVulns(banner, filename):
	f = open(filename,'r')
	for line in f.readlines():
		if line.strip('\n') in banner:
			print '[+] Server is vulnerable:' + banner.strip('\n')
			return
	return

# Funcion principal que inicializa todo el proceso.
def main():
	if len(sys.argv) == 2:
		filename = sys.argv[1]
		# Verificamos que el fichero existe.
		if not os.path.isfile(filename):
			print '[-] ' + filename + ' does not exist.'
			exit(0)
		# Verificamos que tenemos permisos sobre el fichero.
		if not os.access(filename, os.R_OK):
			print '[-] ' + filename + ' access denied.'
			exit(0)
		# Iniciamos el escaneo
		else:
			print "[+] Reading Vulnerabilities From: "+filename
			portList = [21,22,25,80,110,443]
			# Recorremos la lista de direcciones ips
			for x in range(1,255):
				ip = '192.168.1.' + str(x)
				# Para cada ip, recorremos la lista de puertos indicada.
				for port in portList:
					banner = retBanner(ip, port)
					if banner:
						print '[+] ' + ip + ':' + str(port) + ' = ' + banner
						checkVulns(banner, filename)

# Llamada a la funcion principal
if __name__ == '__main__':
	main()